tipo
	rdatanascimento = registro
		dia: inteiro
		mes: inteiro
		ano: inteiro
	fimregistro
	
	rcliente = registro
		cod: inteiro
		nome: caracter
		sexo: caracter
		dn: rdatanascimento
		rg: caracter
		cpf: caracter
		end: caracter
		cid: caracter
		uf: caracter
		total_fitas_ja_locadas: inteiro
		fitas_locadas_atual: inteiro
		ativo: inteiro // 1: ativo -  2: inativo
	fimregistro
	
	vcliente: vetor[1..10] de rcliente

var
	cliente: vcliente
	
inicio

	//OBJETIVO:	APRESENTAR UM MENU DE OPCOES
	//		E OBTER UMA OPCAO DO USUARIO
	//RETORNO: A OPCAO ESCOLHIDA

	funcao menu: inteiro

		//implementacao

	fimfuncao

	//OBJETIVO:	GERA O PROXIMO CODIGO SEQUENCIAL
	//		PARA INCLUSAO DE UM CLIENTE
	//RETORNO: PROXIMO CODIGO GERADO

	funcao obtem_codigo: inteiro

		//implementacao

	fimfuncao
	
	//OBJETIVO:	REALIZA O CADASTRO DE UM NOVO CLIENTE
	//PARAMETROS: c REPRESENTA O CONJUNTO DE REGISTRO DE CLIENTES
	
	procedimento incluicliente (var c: vcliente)
			
		//implementacao

	fimprocendimento

	//OBJETIVO:	OBTEM UMA POSICAO VAZIA NO CADASTRO	
	//		PARA A INCLUSAO DE UM CLIENTE
	//RETORNO: 	VALOR>0 PARA O SUCESSO DE INCLUSAO 
	//		OU VALOR = 0 PARA INSUCESSO DE INCLUSAO

	funcao	obtem_posicao_inclusao: inteiro

		//implementacao

	fimfuncao 		
			
	//OBJETIVO: 	CARREGA AS INFORMACOES DE UM CLIENTE 
	//		EM CADA TEMPO DO REGISTRO
	//PARAMETRO:	c REPRESENTA O REGISTRO DO CLIENTE 
	
	procedimento: le_cliente(var c: rcliente)		
	
		//implementacao
	
	fimprocedimento

	//OBJETIVO: 	LISTAR OS CLIENTES CADASTRADOS
	//PARAMETROS: 	c REPRESENTA O CONJUNTO DE REGISTROS
	//		DE CLIENTES

	procedimento lista_clientes_cadastrados(c:vcliente)
	
		//implementacao

	fimprocedimento

	//OBJETIVO: 	APRESENTAR OS CAMPOS DE UM REGISTRO CCLIENTE
	//PARAMETROS: 	c REPRESENTA O REGISTRO DO CLIENTE
	
	procedimento mostra_cliente (c:vlciente)

		//implementacao

	fimprocedimento

	//OBJETIVO: 	RETIRA UM CLIENTE DO CADASTRO A PARTIR DO 
	//		CODIGO DO CLIENTE FORNECIDO
	//PARAMETROS: c REPRESENTA O CONJUNTO DE REGISTRO DE CLIENTES
	
	procedimento RemoveCliente(var c: vcliente)

		//implementacao

	fimprocedimento

	//OBJETIVO: 	LOCALIZA NO CADASTRO O CLIENTE QUE DESEJA REMOVER
	//PARAMETROS: 	c REPRESENTA O CONJUNTO DE REGISTROS DE CLIENTES 
	//		QUE SERA PESQUISADO E cod REPRESENTA O CODIGO DO 
	//		CLIENTE A SER PESQUISADO 
	//RETORNO: 	A POSICAO DO CLIENTE NO CADASTRO QUE SERA REMOVIDO, SE 
	//		VALOR <> 0 EXISTE, OU SE VALOR = 0 NAO EXISTE NO CADASTRO

	funcao pesquisa_cliente (c:vcliente; codigo: inteiro): inteiro
	
		//implementacao

	fimfuncao

	//OBJETIVO:	VERIFICAR SE UM CODIGO DE CLIENTE EXISTE NO CADASTRO 
	//PARAMETROS:	c REPRESENTA O CONJUNTO DE REGISTROS DE CLIENTES QUE 
	//		SERA PESQUISADO E cod REPRESENTA O CODIGO DO CLIENTE 
	//		A SER PESQUISADO
	//RETORNO: 1 EXISTE OU 0 NAO EXISTE

	funcao existe_codigo (c: vcliente; codigo: inteiro): inteiro

		//implementacao

	fimfuncao

	//OBJETIVO: 	LOCAR FITAS A UM CLIENTE
	//PARAMETROS: 	c REPRESENTA O CONJUNTO DE REGISTROS DE CLIENTES
	
	procedimento loca_fitas_clientes (var c: vcliente)
		
		//implementacao

	fimprocedimento

	//OBJETIVO: 	PESQUISA SE UM CLIENTE TEM FITAS LOCADAS
	//PARAMETROS: 	c REPRESENTA O CONJUNTO DE REGISTROS DE CLIENTES
	//		A SER codigo REPRESENTA O CLIENTE
	//		QUE SERA PESQUISADO
	//RETORNO: 1 EXISTE FITA LOCADA; 0 NAO EXISTE FITA LOCADA

	funcao existe_fita_locada_cliente (c: vcliente; codigo: inteiro): inteiro

		//implementacao

	fimfuncao

	//OBJETIVO: DEVOLVER FITAS DE UM CLIENTE
	//PARAMETROS: c REPRESENTA O CONJUNTO DE REGISTROS DE CLIENTES
	
	procedimento devolve_fitas_cliente(var c:vcliente)

		//implementacao		

	fimprocedimento

	//OBJETIVO: LISTAR OS CLIENTES COM FITAS LOCADAS
	//PARAMETROS: c REPRESENTA O CONJUNTO DE REGISTROS DE CLIENTES

	procedimento lista_clientes_locadas (c: vcliente)

		//implementacao

	fimprocedimento

inicio


fimalgoritmo
	

		

	
	
			
			


	